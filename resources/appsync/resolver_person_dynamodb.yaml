AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  samtwo
  
  Sample SAM Template for samtwo resolver for dynamodb data

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Resources:
  AppSyncResolverMutationPersonCreateDynamoDb:
    Type: AWS::AppSync::Resolver
    #DependsOn: GraphQLApiSchema
    Properties:
      ApiId: !Ref GraphQLApiId
      TypeName: Mutation
      FieldName: personCreateDynamoDb
      DataSourceName: !Ref AppSyncDataSourceNameDynamodb
      RequestMappingTemplate: >
        {
          "version": "2017-02-28",
          "operation": "PutItem",
          "key": {
            "id": $util.dynamodb.toDynamoDBJson($util.autoId())
          },
          "attributeValues" : $util.dynamodb.toMapValuesJson($context.arguments)
        }
      ResponseMappingTemplate: $util.toJson($context.result)

  AppSyncResolverPersonDynamoDb:
    Type: AWS::AppSync::Resolver
    #DependsOn: GraphQLApiSchema
    Properties:
      ApiId: !Ref GraphQLApiId
      TypeName: Query
      FieldName: getPersonDynamoDb
      DataSourceName: !Ref AppSyncDataSourceNameDynamodb
      RequestMappingTemplate: >
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "id": { "S": "${context.arguments.id}" }
          },
          "consistentRead": true
        }
      ResponseMappingTemplate: $util.toJson($context.result)

  # AppSyncResolverPersonByNameDynamoDb:
  #   Type: AWS::AppSync::Resolver
  #   DependsOn: GraphQLApiSchema
  #   Properties:
  #     ApiId: !Ref GraphQLApiId
  #     TypeName: Query
  #     FieldName: getPersonDynamoDb
  #     DataSourceName: !Ref AppSyncDataSourceNameDynamodb
  #     RequestMappingTemplate: >
  #       {
  #         "version": "2017-02-28",
  #         "operation": "GetItem",
  #         "key": {
  #           "id": { "S": "${context.arguments.id}" }
  #         },
  #         "consistentRead": true
  #       }
  #     ResponseMappingTemplate: $util.toJson($context.result)

  AppSyncResolverPeopleDynamoDb:
    Type: AWS::AppSync::Resolver
    #DependsOn: GraphQLApiSchema
    Properties:
      ApiId: !Ref GraphQLApiId
      TypeName: Query
      FieldName: peopleDynamodb
      DataSourceName: !Ref AppSyncDataSourceNameDynamodb
      RequestMappingTemplate: >
        {
          "version": "2017-02-28",
          "operation": "Scan"
        }
      ResponseMappingTemplate: $util.toJson($context.result.items)

Parameters:
  GraphQLApiId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: GraphQLApiIdSSM

  AppSyncDataSourceName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AppSyncDataSourceNameSSM

  AppSyncDataSourceNameDynamodb:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AppSyncDataSourceNameDynamodbSSM

# Outputs:
#   RoleDynamoDbArn:
#     Description: RoleDynamoDb Arn
#     Value: !GetAtt [RoleDynamoDb, Arn]